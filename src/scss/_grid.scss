$col_gutter: 15px;
$breakpoints: ("lg":1220,"md":992,"sm":770,"xs":576,"us":420);

@function reverse($list, $recursive: false) {
  $result: ();

  @for $i from length($list) * -1 through -1 {
    @if type-of(nth($list, abs($i))) == list and $recursive {
      $result: append($result, reverse(nth($list, abs($i)), $recursive));
    } @else {
      $result: append($result, nth($list, abs($i)));
    }
  }

  @return $result;
}

.row {
  display: -webkit-box;
	display: -webkit-flex;
	display: -webkit-inline-box;
	display: -webkit-inline-flex;
	display: inline-flex;
	display: -ms-flex;
	display: -ms-inline-flexbox;
	display: -ms-flexbox;	
	display: flex;
  -webkit-flex-flow: row wrap;
	-ms-flex-flow: row wrap;
	flex-flow: row wrap;
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -$col_gutter;
  margin-right: -$col_gutter;
}
[class*="col-"] {
  width: 100%;
  padding-left: $col_gutter;
  padding-right: $col_gutter;
}

@for $i from 1 through 12 {
  .col-#{$i} {
    -ms-flex: (100% / 12 * $i);
    flex: (100% / 12 * $i);
    max-width: (100% / 12 * $i);
  }
  .col-offset-#{$i} {
    margin-left: (100% / 12 * $i);
  }
}

$reverseBreakpoints: reverse($breakpoints);
@each $name, $screen in $reverseBreakpoints {
  @media (min-width: #{$screen}px) {
    @for $i from 1 through 12 {
      .col-#{$name}-#{$i} {
        -ms-flex: (100% / 12 * $i);
        flex: (100% / 12 * $i);
        max-width: (100% / 12 * $i);
      }
      .col-#{$name}-offset-#{$i} {
        margin-left: (100% / 12 * $i);
      }
    }
  }
}

@each $name, $screen in $breakpoints {
  @media (max-width: #{$screen}px) {
    
    .#{$name}-hidden {
      display: none !important;
      visibility: hidden;
    }
    @for $i from -3 through 3 {
      .#{$name}-order-#{$i} {
        order: $i;
      }
    }
  }
}